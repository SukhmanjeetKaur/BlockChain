// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.7.0 <0.9.0;

contract Election1{
    struct Candidate{
        uint id;
        string name;
        uint voteCount;
    }
    mapping( address => bool) public voters;
    mapping(uint => Candidate) public candidates;
    uint public candidatesCount;
    event votedEvent(
        uint indexed candidateId
    );
    function Election() public {
        addCandidate("NihitGupta");
        addCandidate("Prince Jaiswal");
    }
    function addCandidate(string memory name ) private{
        candidatesCount ++;
        candidates[candidatesCount] = Candidate(candidatesCount, name, 0);
    }
    function vote (uint candidateId) public {
        require(!voters[msg.sender]);
        require(candidateId > 0 && candidateId <= candidatesCount);
        voters[msg.sender] = true;
        candidates[ candidateId].voteCount++;
        emit votedEvent(candidateId);
    }
}

